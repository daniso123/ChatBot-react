{"ast":null,"code":"var _jsxFileName = \"/home/dani/\\xC1rea de Trabalho/ChatBot-react/src/componets/email.js\";\nimport React from 'react';\nimport '../styles/Email.css';\nimport bot from '../assets/images/chatbot.png';\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().email('Email inválido').required('Required')\n});\n\nconst Email = () => {\n  async function fetcEmail(ev) {\n    const name = ev.target;\n    await api.post('/users', name) //.then( (res)=>res.json())\n    .then(data => console.log(data)).catch(error => console.error(\"There was an error!\", error));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"emailImg\",\n      src: bot,\n      alt: \"Chatnilton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Agora me fala seu e-mail, por gentileza.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: ''\n      },\n      validationSchema: SignupSchema,\n      onSubmit: (values, actions) => {\n        //alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          className: \"emailForm\",\n          onBlur: fetcEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 62\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Email;\nexport default Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/home/dani/Área de Trabalho/ChatBot-react/src/componets/email.js"],"names":["React","bot","api","Formik","Form","Field","Yup","FaPaperPlane","SignupSchema","object","shape","email","string","required","Email","fetcEmail","ev","name","target","post","then","data","console","log","catch","error","values","actions","resetForm","errors","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAIA,MAAMC,YAAY,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GAAaD,KAAb,CAAmB,gBAAnB,EAAqCE,QAArC,CAA8C,UAA9C;AAD6B,CAAnB,CAArB;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAEhB,iBAAeC,SAAf,CAAyBC,EAAzB,EAA6B;AAE1B,UAAMC,IAAI,GAAGD,EAAE,CAACE,MAAhB;AACC,UAAMhB,GAAG,CAACiB,IAAJ,CAAS,QAAT,EAAmBF,IAAnB,EAGF;AAHE,KAKDG,IALC,CAKKC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CALd,EAMDG,KANC,CAMKC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,qBAAd,EAAqCA,KAArC,CANd,CAAN;AAQH;;AAAA;AAGD,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAExB,GAA/B;AAAoC,MAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AACXU,QAAAA,KAAK,EAAE;AADI,OADnB;AAII,MAAA,gBAAgB,EAAEH,YAJtB;AAKI,MAAA,QAAQ,EAAE,CAACkB,MAAD,EAASC,OAAT,KAAqB;AAC3B;AACAA,QAAAA,OAAO,CAACC,SAAR;AACH,OARL;AAAA,gBAUK,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAD,kBAEO,QAAC,IAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAiC,UAAA,SAAS,EAAC,WAA3C;AAAuD,UAAA,MAAM,EAAEf;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKc,MAAM,CAAClB,KAAP,IAAgBmB,OAAO,CAACnB,KAAxB,gBAAgC;AAAA,oBAAMkB,MAAM,CAAClB;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAhC,GAA4D,IAFjE,eAGI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,QAFd;AAAA,iCAIC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZZ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CAxDD;;KAAMG,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport '../styles/Email.css';\nimport bot from '../assets/images/chatbot.png';\n\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\n\n\n\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email('Email inválido').required('Required'),\n});\n\nconst Email = () => {\n\n    async function fetcEmail(ev) {\n\n       const name = ev.target;\n        await api.post('/users', name)\n    \n\n            //.then( (res)=>res.json())\n             \n            .then((data) => console.log(data))\n            .catch(error => console.error(\"There was an error!\", error));\n        \n    };\n\n\n    return (\n        <div>\n            <img className=\"emailImg\" src={bot} alt=\"Chatnilton\" />\n            <div className=\"email\">\n                <p>Agora me fala seu e-mail, por gentileza.</p>\n            </div>\n\n\n            <Formik\n                initialValues={{\n                    email: '',\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={(values, actions) => {\n                    //alert(JSON.stringify(values, null, 2));\n                    actions.resetForm();\n                }}\n            >\n                {({ errors, touched }) => (\n                    (\n                        <Form>\n                            <Field name=\"email\" type=\"email\" className=\"emailForm\" onBlur={fetcEmail} />\n                            {errors.email && touched.email ? <div>{errors.email}</div> : null}\n                            <button\n                                type=\"submit\"\n                                className=\"button\"\n\n                            ><FaPaperPlane />\n\n                            </button>\n\n                        </Form>\n                    ))}\n\n            </Formik>\n        </div>\n    );\n\n\n\n};\n\nexport default Email;"]},"metadata":{},"sourceType":"module"}