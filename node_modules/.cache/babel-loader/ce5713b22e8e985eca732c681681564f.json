{"ast":null,"code":"var _jsxFileName = \"/home/dani/\\xC1rea de Trabalho/ChatBot-react/src/componets/Chatbot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/Chatbot.css';\nimport bot from '../assets/images/chatbot.png';\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport City from '../componets/City';\nimport Age from '../componets/Age';\nimport Email from '../componets/email';\nimport RatingStar from '../componets/RatingStar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Nome muito curto!').max(50, 'Nome muito longo!').required('Campo obrigatório')\n});\n\nconst Chatbot = () => {\n  _s();\n\n  const [user, setUser] = useState([]);\n\n  async function fetcData() {\n    //const { name } = ev.target;\n    const res = await api.get('/users', user, {//user\n    });\n    setUser(res.data) //.then( (res)=>res.json()) \n    //.then((data)=> console.log(data))\n    //.catch(error => console.error(\"There was an error!\", error)); \n    .then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"botImg\",\n      src: bot,\n      alt: \"Chatnilton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ol\\xE1, eu sou o Chatnilton, tudo bem?Para come\\xE7armos, preciso saber seu nome.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      validationSchema: SignupSchema,\n      onSubmit: (values, actions) => {\n        //alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          className: \"input\",\n          value: user,\n          onBlur: fetcData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), errors.name && touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(City, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Age, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"botImg\",\n      src: bot,\n      alt: \"Chatnilton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Voc\\xEA finalizou o teste, fa\\xE7a uma avalia\\xE7\\xE3o sobre o processo que realizou at\\xE9 chegar aqui. N\\xF3s agradecemos!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RatingStar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chatbot, \"VklLibMv5eZEFMyAzC8A++y6mD4=\");\n\n_c = Chatbot;\nexport default Chatbot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"sources":["/home/dani/Área de Trabalho/ChatBot-react/src/componets/Chatbot.js"],"names":["React","useState","bot","api","Formik","Form","Field","Yup","FaPaperPlane","City","Age","Email","RatingStar","SignupSchema","object","shape","name","string","min","max","required","Chatbot","user","setUser","fetcData","res","get","data","then","response","console","log","catch","error","values","actions","resetForm","errors","touched"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Chatbot.css';\nimport bot from '../assets/images/chatbot.png';\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport City from '../componets/City';\nimport Age from '../componets/Age';\nimport Email from '../componets/email';\nimport RatingStar from '../componets/RatingStar';\n\n\n\nconst SignupSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(2, 'Nome muito curto!')\n        .max(50, 'Nome muito longo!')\n        .required('Campo obrigatório'),\n});\n\nconst Chatbot = () => {\n\n    const [user, setUser] = useState([]);\n\n\n    async function fetcData() {\n\n        //const { name } = ev.target;\n         const res = await api.get('/users', user,{\n            //user\n        });\n         setUser(res.data)\n            //.then( (res)=>res.json()) \n            //.then((data)=> console.log(data))\n            //.catch(error => console.error(\"There was an error!\", error)); \n            .then(function (response) {\n                console.log(response);\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n\n    };\n\n\n    return (\n        <div className=\"chatbot\">\n            <img className=\"botImg\" src={bot} alt=\"Chatnilton\" />\n            <div className=\"bot\">\n                <p>Olá, eu sou o Chatnilton, tudo bem?Para começarmos, preciso saber seu nome.</p>\n            </div>\n\n\n            <Formik\n                initialValues={{\n                    name: '',\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={(values, actions) => {\n                    //alert(JSON.stringify(values, null, 2));\n                    actions.resetForm();\n\n                }}\n            >\n                {({ errors, touched }) => (\n                    (\n                        <Form>\n                            <Field\n                                name=\"name\"\n                                className=\"input\"\n                                value = {user}\n                                onBlur={fetcData}\n                            />\n                            {errors.name && touched.name ? (\n                                <div>{errors.name}</div>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                className=\"button\"\n\n                            ><FaPaperPlane />\n\n                            </button>\n\n                        </Form>\n                    ))}\n\n            </Formik>\n\n            <City />\n            <Age />\n            <Email />\n            <img className=\"botImg\" src={bot} alt=\"Chatnilton\" />\n            <div className=\"bot\">\n                <p>Você finalizou o teste, faça uma avaliação sobre o processo que realizou até chegar aqui. Nós agradecemos!</p>\n            </div>\n            <RatingStar />\n        </div>\n    );\n\n\n\n};\n\nexport default Chatbot;"]},"metadata":{},"sourceType":"module"}