{"ast":null,"code":"var _jsxFileName = \"/home/dani/\\xC1rea de Trabalho/ChatBot-react/src/componets/City.js\";\nimport React from 'react';\nimport '../styles/City.css';\nimport bot from '../assets/images/chatbot.png';\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  cidade: Yup.string().required('Escolha um campo')\n});\n\nconst City = () => {\n  async function fetcCity(ev) {\n    const {\n      name\n    } = ev.target;\n    await api.post('/users', name) //.then( (res)=>res.json()) \n    .then(data => console.log(data)).catch(error => console.error(\"There was an error!\", error));\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"cityImg\",\n      src: bot,\n      alt: \"Chatnilton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Que satisfa\\xE7\\xE3o.Agora que sei seu nome, qual a cidade e estado que voc\\xEA mora?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        cidade: ''\n      },\n      validationSchema: SignupSchema,\n      onSubmit: (values, actions) => {\n        //alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          component: \"select\",\n          name: \"cidade\",\n          className: \"cityForm\",\n          onBlur: fetcCity,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            children: \"Selecione a cidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"S\\xE3o Paulo\",\n            children: \"S\\xE3o Paulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"S\\xE3o Paulo\",\n            children: \"S\\xE3o Paulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), errors.cidade && touched.cidade ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.cidade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = City;\nexport default City;\n\nvar _c;\n\n$RefreshReg$(_c, \"City\");","map":{"version":3,"sources":["/home/dani/Área de Trabalho/ChatBot-react/src/componets/City.js"],"names":["React","bot","api","Formik","Form","Field","Yup","FaPaperPlane","SignupSchema","object","shape","cidade","string","required","City","fetcCity","ev","name","target","post","then","data","console","log","catch","error","values","actions","resetForm","errors","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAGA,MAAMC,YAAY,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,MAAM,EAAEL,GAAG,CAACM,MAAJ,GACHC,QADG,CACM,kBADN;AAD4B,CAAnB,CAArB;;AAMA,MAAMC,IAAI,GAAG,MAAM;AAEf,iBAAeC,QAAf,CAAyBC,EAAzB,EAA6B;AAEzB,UAAM;AAAEC,MAAAA;AAAF,QAAUD,EAAE,CAACE,MAAnB;AACA,UAAMhB,GAAG,CAACiB,IAAJ,CAAS,QAAT,EAAmBF,IAAnB,EACN;AADM,KAELG,IAFK,CAECC,IAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFT,EAGLG,KAHK,CAGCC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,qBAAd,EAAqCA,KAArC,CAHV,CAAN;AAKH;;AAAA;AAGD,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAExB,GAA9B;AAAmC,MAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AACXU,QAAAA,MAAM,EAAE;AADG,OADnB;AAII,MAAA,gBAAgB,EAAEH,YAJtB;AAKI,MAAA,QAAQ,EAAE,CAACkB,MAAD,EAASC,OAAT,KAAqB;AAE3B;AACAA,QAAAA,OAAO,CAACC,SAAR;AAEH,OAVL;AAAA,gBAYK,CAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAAD,kBAEO,QAAC,IAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,SAAS,EAAC,UAAlD;AAA6D,UAAA,MAAM,EAAEf,QAArE;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAQKc,MAAM,CAAClB,MAAP,IAAiBmB,OAAO,CAACnB,MAAzB,gBACG;AAAA,oBAAMkB,MAAM,CAAClB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADH,GAEG,IAVR,eAWI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,QAFd;AAAA,iCAIC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAdZ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CAjED;;KAAMG,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport '../styles/City.css';\nimport bot from '../assets/images/chatbot.png';\n\nimport api from '../services/api';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPaperPlane } from 'react-icons/fa';\n\n\nconst SignupSchema = Yup.object().shape({\n    cidade: Yup.string()\n        .required('Escolha um campo'),\n\n});\n\nconst City = () => {\n\n    async function fetcCity (ev) {\n         \n        const { name} = ev.target;\n        await api.post('/users', name)\n        //.then( (res)=>res.json()) \n        .then((data)=> console.log(data))\n        .catch(error => console.error(\"There was an error!\", error)); \n\n    };\n\n\n    return (\n        <div>\n            <img className=\"cityImg\" src={bot} alt=\"Chatnilton\" />\n            <div className=\"city\">\n                <p> Que satisfação.Agora que sei seu nome, qual a cidade e estado que você mora?</p>\n            </div>\n\n\n            <Formik\n                initialValues={{\n                    cidade: '',\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={(values, actions) => {\n\n                    //alert(JSON.stringify(values, null, 2));\n                    actions.resetForm();\n                    \n                }}\n            >\n                {({ errors, touched }) => (\n                    (\n                        <Form>\n                            <Field component=\"select\" name=\"cidade\" className=\"cityForm\" onBlur={fetcCity} >\n                                <option value={null}>Selecione a cidade</option>\n                                <option value=\"São Paulo\">São Paulo</option>\n                                <option value=\"São Paulo\">São Paulo</option>\n                                \n                                \n                            </Field>\n                            {errors.cidade && touched.cidade ? (\n                                <div>{errors.cidade}</div>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                className=\"button\"\n\n                            ><FaPaperPlane />\n\n                            </button>\n\n                        </Form>\n                    ))}\n\n            </Formik>\n            \n\n        </div>\n    );\n\n\n\n};\n\nexport default City;"]},"metadata":{},"sourceType":"module"}